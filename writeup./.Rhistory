library(tidyverse)
library(plotrix) #and others if necessary
library(qualtRics)
library(ez)
library(yarrr)
library(DescTools)
####Import data
data <- fetch_survey(surveyID = "SV_bQ6I1kuS75Z5Jvo", force_request = T, include_display_order = FALSE, label = FALSE, convert = FALSE)
View(data)
###Data Preparation
####Load Relevant Libraries and Functions
library(tidyverse)
library(plotrix) #and others if necessary
library(qualtRics)
library(ez)
library(yarrr)
library(DescTools)
####Import data
data <- fetch_survey(surveyID = "SV_bQ6I1kuS75Z5Jvo", force_request = T, include_display_order = FALSE, label = FALSE, convert = FALSE)
#### Data exclusion / filtering
data <- data %>%
mutate(id = row_number()) %>%
select(id, everything()) %>%
filter(Consent == 2) %>% #consenting
filter(Mch.z1 == 1,
Mch.z2 == 1,
Mch.d1 == 1,
Mch.d2 == 1,
Mch.g1 == 1,
Mch.g2 == 1,
Mch.y1 == 1,
Mch.y2 == 1) %>% #check questions
subset(select = -c(2:19)) %>%
select(-starts_with(c("Mch", #getting rid of irrelevant columns, including check questions
"Comm",
"Age",
"Gender",
"prolific-id",
"PROLIFIC_PID",
"tableorder",
"cov"))) %>%
pivot_longer(!c(id, task, moderator), names_to = "question_type", values_to = "rating") %>% #turn table into longer
mutate(presence_of_moderator = case_when(moderator == "drolyuyu" & grepl("d3", question_type) ~ "present", #create column indicating whether it was moderated or not
moderator == "drolyuyu" & grepl("d4", question_type) ~ "present",
moderator == "drolyuyu" & grepl("y3", question_type) ~ "present",
moderator == "drolyuyu" & grepl("y4", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("z3", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("z4", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("Z3", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("Z4", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("g3", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("g4", question_type) ~ "present",
TRUE ~ "absent")) %>%
mutate("causalexplanatoryCF" = case_when(grepl("CaTy", question_type) ~ "causal", #change column names
grepl("ExTy", question_type) ~ "explanatory",
grepl("CaTo", question_type) ~ "causal",
grepl("ExTo", question_type) ~ "explanatory",
grepl("Ty.CF", question_type) ~ "counterfactual",
grepl("To.CF", question_type) ~ "counterfactual")) %>%
mutate("typetoken" = case_when(grepl("CaTy", question_type) ~ "type", #change column names
grepl("ExTy", question_type) ~ "type",
grepl("CaTo", question_type) ~ "token",
grepl("ExTo", question_type) ~ "token",
grepl("Ty.CF", question_type) ~ "type",
grepl("To.CF", question_type) ~ "token")) %>%
filter(!is.na(rating)) %>%
select(-c(moderator, task, question_type)) #get rid of last remaining unnecessary columns
#perform ANOVA on causal/explanatory ratings
dataconfirmatory <- data %>%
filter(grepl("counterfactual", causalexplanatoryCF) == FALSE)
aov1 <- aov(rating ~ (presence_of_moderator*causalexplanatoryCF*typetoken) + Error(id/(presence_of_moderator)) + (causalexplanatoryCF*typetoken), data = dataconfirmatory)
summary(aov1)
etasq1 <- EtaSq(aov1, type = 1, anova = TRUE)
etasq1 #full table
etasq1[1,2] #effect size for the presence of moderator
#plot using ggplot, using same method as paper just for comparison
confirmatoryplot <- dataconfirmatory %>%
group_by(presence_of_moderator) %>%
summarize(Mean = mean(as.numeric(rating), na.rm = TRUE), SEM = std.error(rating, na.rm = TRUE))
ggplot(confirmatoryplot, aes(x = presence_of_moderator, y = Mean, fill = presence_of_moderator)) +
geom_bar(position = "dodge", stat = "identity", width = .6) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), position = position_dodge(.9), width = .25) +
theme_classic() +
ylab("Cause/Explanation Ratings") +
xlab("Presence of Moderator")+
scale_x_discrete(labels = c("Non-Moderated", "Moderated")) +
scale_fill_manual(guide = NULL, name = "Presence of Moderator", labels = c("Non-moderated", "Moderated"), values = c("gray", "grey20")) +
theme(legend.position = "top")
#as per suggestion: pirate plot of all condition differences
pirateplot(formula = rating ~ presence_of_moderator,
data = dataconfirmatory,
theme = 3,
xlab = "Presence of Moderator",
ylab = "Cause/Explanation Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Non-Moderated", "Moderated"), lwd = 0)
pirateplot(formula = rating ~ causalexplanatoryCF,
data = dataconfirmatory,
theme = 3,
xlab = "Causal vs. Explanatory Questions",
ylab = "Endorsement Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Causal", "Explanatory"), lwd = 0)
pirateplot(formula = rating ~ typetoken,
data = dataconfirmatory,
theme = 3,
xlab = "Type vs. Token Questions",
ylab = "Cause/Explanation Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Token", "Type"), lwd = 0)
###Data Preparation
####Load Relevant Libraries and Functions
library(tidyverse)
library(plotrix) #and others if necessary
library(qualtRics)
library(ez)
library(yarrr)
library(DescTools)
####Import data
data <- fetch_survey(surveyID = "SV_bQ6I1kuS75Z5Jvo", force_request = T, include_display_order = FALSE, label = FALSE, convert = FALSE)
#### Data exclusion / filtering
data <- data %>%
mutate(id = row_number()) %>%
select(id, everything()) %>%
filter(Consent == 2) %>% #consenting
filter(Mch.z1 == 1,
Mch.z2 == 1,
Mch.d1 == 1,
Mch.d2 == 1,
Mch.g1 == 1,
Mch.g2 == 1,
Mch.y1 == 1,
Mch.y2 == 1) %>% #check questions
subset(select = -c(2:19)) %>%
select(-starts_with(c("Mch", #getting rid of irrelevant columns, including check questions
"Comm",
"Age",
"Gender",
"prolific-id",
"PROLIFIC_PID",
"tableorder",
"cov"))) %>%
pivot_longer(!c(id, task, moderator), names_to = "question_type", values_to = "rating") %>% #turn table into longer
mutate(presence_of_moderator = case_when(moderator == "drolyuyu" & grepl("d3", question_type) ~ "present", #create column indicating whether it was moderated or not
moderator == "drolyuyu" & grepl("d4", question_type) ~ "present",
moderator == "drolyuyu" & grepl("y3", question_type) ~ "present",
moderator == "drolyuyu" & grepl("y4", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("z3", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("z4", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("Z3", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("Z4", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("g3", question_type) ~ "present",
moderator == "zelmogrimond" & grepl("g4", question_type) ~ "present",
TRUE ~ "absent")) %>%
mutate("causalexplanatoryCF" = case_when(grepl("CaTy", question_type) ~ "causal", #change column names
grepl("ExTy", question_type) ~ "explanatory",
grepl("CaTo", question_type) ~ "causal",
grepl("ExTo", question_type) ~ "explanatory",
grepl("Ty.CF", question_type) ~ "counterfactual",
grepl("To.CF", question_type) ~ "counterfactual")) %>%
mutate("typetoken" = case_when(grepl("CaTy", question_type) ~ "type", #change column names
grepl("ExTy", question_type) ~ "type",
grepl("CaTo", question_type) ~ "token",
grepl("ExTo", question_type) ~ "token",
grepl("Ty.CF", question_type) ~ "type",
grepl("To.CF", question_type) ~ "token")) %>%
filter(!is.na(rating)) %>%
select(-c(moderator, task, question_type)) #get rid of last remaining unnecessary columns
#perform ANOVA on causal/explanatory ratings
dataconfirmatory <- data %>%
filter(grepl("counterfactual", causalexplanatoryCF) == FALSE)
aov1 <- aov(rating ~ (presence_of_moderator*causalexplanatoryCF*typetoken) + Error(id/(presence_of_moderator)) + (causalexplanatoryCF*typetoken), data = dataconfirmatory)
summary(aov1)
etasq1 <- EtaSq(aov1, type = 1, anova = TRUE)
etasq1 #full table
etasq1[1,2] #effect size for the presence of moderator
#plot using ggplot, using same method as paper just for comparison
confirmatoryplot <- dataconfirmatory %>%
group_by(presence_of_moderator) %>%
summarize(Mean = mean(as.numeric(rating), na.rm = TRUE), SEM = std.error(rating, na.rm = TRUE))
ggplot(confirmatoryplot, aes(x = presence_of_moderator, y = Mean, fill = presence_of_moderator)) +
geom_bar(position = "dodge", stat = "identity", width = .6) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), position = position_dodge(.9), width = .25) +
theme_classic() +
ylab("Cause/Explanation Ratings") +
xlab("Presence of Moderator")+
scale_x_discrete(labels = c("Non-Moderated", "Moderated")) +
scale_fill_manual(guide = NULL, name = "Presence of Moderator", labels = c("Non-moderated", "Moderated"), values = c("gray", "grey20")) +
theme(legend.position = "top")
#as per suggestion: pirate plot of all condition differences
pirateplot(formula = rating ~ presence_of_moderator,
data = dataconfirmatory,
theme = 3,
xlab = "Presence of Moderator",
ylab = "Cause/Explanation Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Non-Moderated", "Moderated"), lwd = 0)
pirateplot(formula = rating ~ causalexplanatoryCF,
data = dataconfirmatory,
theme = 3,
xlab = "Causal vs. Explanatory Questions",
ylab = "Endorsement Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Causal", "Explanatory"), lwd = 0)
pirateplot(formula = rating ~ typetoken,
data = dataconfirmatory,
theme = 3,
xlab = "Type vs. Token Questions",
ylab = "Cause/Explanation Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Token", "Type"), lwd = 0)
#perform ANOVA on counterfactual ratings
datacounterfactual <- data %>%
filter(grepl("counterfactual", causalexplanatoryCF))
aov2 <- aov(rating ~ (presence_of_moderator*typetoken) + Error(id/(presence_of_moderator)) + (typetoken), data = datacounterfactual)
summary(aov2)
etasq2 <- EtaSq(aov2, type = 1, anova = TRUE)
etasq2
etasq2[1,2]
counterfactualplot <- datacounterfactual %>%
group_by(presence_of_moderator) %>%
summarize(Mean = mean(as.numeric(rating), na.rm = TRUE), SEM = std.error(rating, na.rm = TRUE))
ggplot(counterfactualplot, aes(x = presence_of_moderator, y = Mean, fill = presence_of_moderator)) +
geom_bar(position = "dodge", stat = "identity", width = .6) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), position = position_dodge(.9), width = .25) +
theme_classic() +
ylab("Cause/Explanation Ratings") +
xlab("Presence of Moderator")+
scale_x_discrete(labels = c("Non-Moderated", "Moderated")) +
scale_fill_manual(guide = NULL, name = "Presence of Moderator", labels = c("Non-moderated", "Moderated"), values = c("gray", "grey20")) +
theme(legend.position = "top")
pirateplot(formula = rating ~ presence_of_moderator,
data = datacounterfactual,
theme = 3,
xlab = "Presence of Moderator",
ylab = "Cause/Explanation Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Non-Moderated", "Moderated"), lwd = 0)
pirateplot(formula = rating ~ typetoken,
data = datacounterfactual,
theme = 3,
xlab = "Presence of Moderator",
ylab = "Cause/Explanation Ratings",
point.o = 1,
gl.lty = 1,
width.min = 1,
point.pch = 16,
inf.f.o = .4,
yaxt = "n",
xaxt = "n")
axis(2, at = seq(from = 0, to = 7, by = 1), las = 2)
axis(1, at = c(1,2), labels = c("Token", "Type"), lwd = 0)
